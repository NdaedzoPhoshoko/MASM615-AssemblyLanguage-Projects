Microsoft (R) Macro Assembler Version 6.15.8803		    07/10/24 23:00:36
ASSIGNMENT1         (Assignment1.asm)			     Page 1 - 1


				TITLE ASSIGNMENT1         (Assignment1.asm)

				;Program: Sum of two integers, using clear screen and procedures
				;Author : Unarine Nemangwela
				;Date   : 23 August 2022

				INCLUDE Irvine32.INC 
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data 
 00000000  0000000F [		VarName BYTE 15 DUP(0),0
	    00
	   ] 00
 00000010 45 6E 74 65 72	nameMsg BYTE "Enter your Name: ",0
	   20 79 6F 75 72
	   20 4E 61 6D 65
	   3A 20 00
 00000022 45 6E 74 65 72	ageMsg BYTE "Enter your age: ",0
	   20 79 6F 75 72
	   20 61 67 65 3A
	   20 00
 00000033 2C 20 61 67 65	spaceMgs BYTE ", age ",0
	   20 00
 0000003A 45 6E 74 65 72	string1 BYTE "Enter Integer 1: ",0
	   20 49 6E 74 65
	   67 65 72 20 31
	   3A 20 00
 0000004C 45 6E 74 65 72	string2 Byte "Enter Integer 2: ",0
	   20 49 6E 74 65
	   67 65 72 20 32
	   3A 20 00
 0000005E 59 6F 75 72 20	sumMsg BYTE "Your sum is : ",0
	   73 75 6D 20 69
	   73 20 3A 20 00
 0000006D 53 79 73 74 65	loadMsg BYTE "System Loading...",0
	   6D 20 4C 6F 61
	   64 69 6E 67 2E
	   2E 2E 00

 00000000			.data?
 00000000 00000000		age DWORD ?
 00000004 00000000		int1 DWORD ?
 00000008 00000000		int2 DWORD ?
 0000000C 00000000		VarSum  DWORD ?

 00000000			.code

 00000000			userName PROC                    ; procedure for collecting user name

 00000000  B6 18		mov dh, 24d                      ; y-coordinate : y= 24d
 00000002  B2 28		mov dl, 40d                      ; x-coordinate : x= 40d
 00000004  E8 00000000 E	call gotoXY

 00000009  BA 00000010 R	mov edx, OFFSET nameMsg
 0000000E  E8 00000000 E	call WriteString
 00000013  BA 00000000 R	mov edx, OFFSET VarName
 00000018  B9 00000010		mov ecx, SIZEOF VarName
 0000001D  E8 00000000 E	call ReadString
 00000022  C3			ret
 00000023			userName ENDP

 00000023			ageProcedure PROC                ; procedure for collecting user age

 00000023  B6 19		mov dh, 25d                      ; y-coordinate : y= 25d
 00000025  B2 28		mov dl, 40d                      ; x-coordinate : x= 40d
 00000027  E8 00000000 E	call gotoXY

 0000002C  BA 00000022 R	mov edx, OFFSET ageMsg
 00000031  E8 00000000 E	call WriteString
 00000036  E8 00000000 E	call ReadInt
 0000003B  A3 00000000 R	mov age, eax
 00000040  C3			ret
 00000041			ageProcedure ENDP

 00000041			summation PROC
 00000041  E8 00000000 E	call Crlf                        ; open newline

 00000046  B6 1A		mov dh, 26d                      ; y-coordinate : y= 26d
 00000048  B2 28		mov dl, 40d                      ; x-coordinate : x= 40d
 0000004A  E8 00000000 E	call gotoXY

 0000004F  BA 00000000 R	mov edx, OFFSET VarName
 00000054  E8 00000000 E	call WriteString
 00000059  BA 00000033 R	mov edx, OFFSET spaceMgs
 0000005E  E8 00000000 E	call WriteString
 00000063  A1 00000000 R	mov eax, age
 00000068  E8 00000000 E	call WriteInt

 0000006D  E8 00000000 E	call Crlf
 00000072  B6 1B		mov dh, 27d                      ; y-coordinate : y= 27d
 00000074  B2 28		mov dl, 40d                      ; x-coordinate : x= 40d
 00000076  E8 00000000 E	call gotoXY

 0000007B  BA 0000003A R	mov edx, OFFSET string1
 00000080  E8 00000000 E	call WriteString                 ; "enter integer 1: ____"
 00000085  E8 00000000 E	call ReadInt                   
 0000008A  A3 00000004 R	mov int1, eax

 0000008F  B6 1C		mov dh, 28d                      ; y-coordinate : y= 28d
 00000091  B2 28		mov dl, 40d                      ; x-coordinate : x= 40d
 00000093  E8 00000000 E	call gotoXY

 00000098  BA 0000004C R	mov edx, OFFSET string2          ; "enter integer 2: ____"
 0000009D  E8 00000000 E	call WriteString
 000000A2  E8 00000000 E	call ReadInt
 000000A7  A3 00000008 R	mov int2, eax

 000000AC  A1 00000004 R	mov eax , [int1]
 000000B1  03 05 00000008 R	add eax , [int2]                   
 000000B7  A3 0000000C R	mov VarSum, eax                   ; VarSum = int1 + int2

 000000BC  E8 00000000 E	call Crlf
 000000C1  B6 1D		mov dh, 29d                       ; y-coordinate : y= 29d
 000000C3  B2 28		mov dl, 40d                       ; x-coordinate: x= 40d
 000000C5  E8 00000000 E	call gotoXY

 000000CA  BA 0000005E R	mov edx, OFFSET sumMsg            ; "Your sum is : ____"
 000000CF  E8 00000000 E	call WriteString
 000000D4  A1 0000000C R	mov eax, VarSum 
 000000D9  E8 00000000 E	call WriteInt                     ; display sum

 000000DE  C3			ret 
 000000DF			summation ENDP

 000000DF			systemLoading PROC               ; a procedure for delay
 000000DF  E8 00000000 E	call Crlf
 000000E4  BA 0000006D R	mov edx, OFFSET loadMsg
 000000E9  E8 00000000 E	call WriteString
 000000EE  B8 00001388		mov eax, 5000                    ; pause the console for 5000milliseconds 
 000000F3  E8 00000000 E	call delay                       ; 5000ms/1000 = 5s delay

 000000F8  C3			ret
 000000F9			systemLoading ENDP

 000000F9			main PROC

 000000F9  E8 00000000 E	call ClrScr                      ; clears the screen
 000000FE  E8 FFFFFEFD		call userName
 00000103  E8 FFFFFF1B		call ageProcedure

 00000108  B9 00000003		mov ecx, 3                       ;  let it run 3 times
 0000010D			myLoop:
 0000010D  E8 FFFFFF2F		      call summation
 00000112  E8 FFFFFFC8		      call systemLoading         ; delay for 5s
 00000117  E8 00000000 E	      call ClrScr
 0000011C  E2 EF		      loop myLoop

				exit
 0000011E  6A 00	   *	    push   +000000000h
 00000120  E8 00000000 E   *	    call   ExitProcess
 00000125			main ENDP
				END main
Microsoft (R) Macro Assembler Version 6.15.8803		    07/10/24 23:00:36
ASSIGNMENT1         (Assignment1.asm)			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_BSS . . . . . . . . . . . . . .	32 Bit	 00000010 DWord	  Public  'BSS'  
_DATA  . . . . . . . . . . . . .	32 Bit	 0000007F DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000125 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandtail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ageProcedure . . . . . . . . . .	P Near	 00000023 _TEXT	Length= 0000001E Public STDCALL
main . . . . . . . . . . . . . .	P Near	 000000F9 _TEXT	Length= 0000002C Public STDCALL
  myLoop . . . . . . . . . . . .	L Near	 0000010D _TEXT	
summation  . . . . . . . . . . .	P Near	 00000041 _TEXT	Length= 0000009E Public STDCALL
systemLoading  . . . . . . . . .	P Near	 000000DF _TEXT	Length= 0000001A Public STDCALL
userName . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000023 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VarName  . . . . . . . . . . . .	Byte	 00000000 _DATA	
VarSum . . . . . . . . . . . . .	DWord	 0000000C _BSS	
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
ageMsg . . . . . . . . . . . . .	Byte	 00000022 _DATA	
age  . . . . . . . . . . . . . .	DWord	 00000000 _BSS	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
int1 . . . . . . . . . . . . . .	DWord	 00000004 _BSS	
int2 . . . . . . . . . . . . . .	DWord	 00000008 _BSS	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
loadMsg  . . . . . . . . . . . .	Byte	 0000006D _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
nameMsg  . . . . . . . . . . . .	Byte	 00000010 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
spaceMgs . . . . . . . . . . . .	Byte	 00000033 _DATA	
string1  . . . . . . . . . . . .	Byte	 0000003A _DATA	
string2  . . . . . . . . . . . .	Byte	 0000004C _DATA	
sumMsg . . . . . . . . . . . . .	Byte	 0000005E _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
